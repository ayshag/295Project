{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aysha\\\\Desktop\\\\Aysha\\\\SJSU\\\\Fall 2019\\\\CMPE 295A\\\\project\\\\frontend\\\\src\\\\components\\\\SurveillanceHistory\\\\SurveillanceHistory.js\";\nimport React, { Component } from \"react\";\nimport '../../App.css';\nimport LeftDrawer from '../Drawer/Drawer';\nimport * as videoStyles from \"../../styles/video\";\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { SignalingClient } from 'amazon-kinesis-video-streams-webrtc';\nimport backendURL from '../../backendUrl';\nimport { Redirect } from \"react-router-dom\";\nimport ReactHLS from 'react-hls';\nimport Hls from \"hls.js\";\nimport $ from \"jquery\";\nimport AWS from \"aws-sdk\";\nimport Button from '@material-ui/core/Button';\nimport DateTimePicker from 'react-datetime-picker';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TimePicker from 'rc-time-picker';\nimport 'rc-time-picker/assets/index.css';\n\nclass SurveillanceHistory extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startDateChange = date => {\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.endDateChange = date => {\n      this.setState({\n        endDate: date\n      });\n    };\n\n    this.startTimeChange = time => {\n      this.setState({\n        startTime: time\n      });\n    };\n\n    this.endTimeChange = time => {\n      this.setState({\n        endTime: time\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      var startTime = this.state.startTime._d.toString().split(' ');\n\n      var startDate = this.state.startDate.toString().split(' ');\n\n      var endTime = this.state.endTime._d.toString().split(' ');\n\n      var endDate = this.state.endDate.toString().split(' ');\n      console.log(startTime);\n      console.log(startDate);\n      console.log(startTime[0]);\n      console.log(startDate[1]);\n      console.log(endTime[0]);\n      console.log(endTime[1]);\n    };\n\n    this.state = {\n      startDate: null,\n      endDate: null,\n      startTime: null,\n      endTime: null\n    };\n    if (this.props.allThreats.length == 0) this.props.threats();\n  }\n\n  componentDidMount() {\n    this.props.surveillance(); // console.log(\"user : \"  + sessionStorage.getItem(\"user\"))\n    // if(sessionStorage.getItem(\"user\") == null)\n    //   this.setState({redirectVar : <Redirect to= \"/signin\"/>})\n  }\n\n  componentWillMount() {}\n\n  render() {\n    var date = new Date().getMonth() + 1 + \"/\" + new Date().getDate() + \"/\" + new Date().getFullYear();\n    var location = \"37.3352° N, 121.8811° W\";\n    var city = \"San Jose\";\n    var camera = \"A103\";\n    var protocol = 'HLS';\n    var streamName = 'threatStream';\n    var playbackMode = 'ON_DEMAND';\n    var playerName = 'HLS.js';\n    var options = {\n      accessKeyId: 'AKIAXBXQVKC4TY2ZUR6V',\n      secretAccessKey: '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',\n      sessionToken: undefined,\n      region: 'us-east-1',\n      endpoint: undefined\n    };\n    var kinesisVideo = new AWS.KinesisVideo(options);\n    var kinesisVideoArchivedContent = new AWS.KinesisVideoArchivedMedia(options);\n    kinesisVideo.getDataEndpoint({\n      StreamName: streamName,\n      APIName: \"GET_HLS_STREAMING_SESSION_URL\"\n    }, function (err, response) {\n      if (err) {\n        return console.error(err);\n      }\n\n      console.log('Data endpoint: ' + response.DataEndpoint);\n      kinesisVideoArchivedContent.endpoint = new AWS.Endpoint(response.DataEndpoint); // Step 3: Get a Streaming Session URL\n\n      var consoleInfo = 'Fetching ' + protocol + ' Streaming Session URL';\n      console.log(consoleInfo);\n      kinesisVideoArchivedContent.getHLSStreamingSessionURL({\n        StreamName: streamName,\n        PlaybackMode: playbackMode,\n        HLSFragmentSelector: {\n          FragmentSelectorType: 'SERVER_TIMESTAMP',\n          TimestampRange: playbackMode === \"LIVE\" ? undefined : {\n            StartTimestamp: new Date('2020-04-20T04:23:41.311Z'),\n            EndTimestamp: new Date('2020-04-20T05:23:41.311Z')\n          }\n        },\n        ContainerFormat: $('#containerFormat').val(),\n        DiscontinuityMode: $('#discontinuityMode').val(),\n        DisplayFragmentTimestamp: $('#displayFragmentTimestamp').val(),\n        MaxMediaPlaylistFragmentResults: parseInt($('#maxResults').val()),\n        Expires: parseInt($('#expires').val())\n      }, function (err, response) {\n        if (err) {\n          return console.error(err);\n        }\n\n        console.log('HLS Streaming Session URL: ' + response.HLSStreamingSessionURL); // Step 4: Give the URL to the video player.\n\n        var playerElement = $('#hlsjs');\n        playerElement.show();\n        var player = new Hls();\n        console.log('Created HLS.js Player');\n        player.loadSource(response.HLSStreamingSessionURL);\n        player.attachMedia(playerElement[0]);\n        console.log('Set player source');\n        player.on(Hls.Events.MANIFEST_PARSED, function () {\n          $('#hlsjs').play();\n          console.log('Starting playback');\n        });\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(LeftDrawer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: videoStyles.videoDisplayContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      style: videoStyles.videoDisplay,\n      id: \"hlsjs\",\n      controls: true,\n      autoPlay: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: videoStyles.videoContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: videoStyles.videoInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \" \", React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \" Enter Start Date \", React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      onChange: this.startDateChange,\n      style: 'border : 1px',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), \" Enter Start Time \", React.createElement(TimePicker, {\n      onChange: this.startTimeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \" \")), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \" Enter End Date \", React.createElement(DatePicker, {\n      selected: this.state.endDate,\n      onChange: this.endDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), \" Enter End Time \", React.createElement(TimePicker, {\n      onChange: this.endTimeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Go\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    link: state.surveillanceReducer.link,\n    allThreats: state.threatsReducer.allThreats\n  };\n};\n\nconst mapDispatchStateToProps = dispatch => {\n  return {\n    surveillance: () => {\n      axios.get(backendURL + '/live-surveillance').then(response => {\n        dispatch({\n          type: \"surveillance\",\n          payload: response.data\n        });\n      });\n    },\n    threats: () => {\n      /*  axios.get(backendURL + '/all-threats').then(response=>{\r\n            console.log(response.data);\r\n          // const threatIds = response.data;\r\n           axios.post(backendURL + '/threat-details', response.data).then(response=>{\r\n                  //   console.log(result);\r\n                     dispatch({type: \"threats\",payload : response.data})\r\n            })\r\n              \r\n        }) */\n      axios.get(backendURL + '/all-threats').then(response => {\n        var threatsData = []; //dispatch({type: \"threats\",payload : response.data})\n\n        for (var i = 0; i < response.data.length; i++) {\n          axios.post(backendURL + '/threat-details', response.data[i]).then(result => {\n            threatsData.push(result.data);\n          }).then(function () {\n            if (threatsData.length == response.data.length) dispatch({\n              type: \"threats\",\n              payload: threatsData\n            });\n          });\n        }\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchStateToProps)(SurveillanceHistory);","map":{"version":3,"sources":["C:/Users/Aysha/Desktop/Aysha/SJSU/Fall 2019/CMPE 295A/project/frontend/src/components/SurveillanceHistory/SurveillanceHistory.js"],"names":["React","Component","LeftDrawer","videoStyles","axios","connect","SignalingClient","backendURL","Redirect","ReactHLS","Hls","$","AWS","Button","DateTimePicker","DatePicker","TimePicker","SurveillanceHistory","constructor","props","startDateChange","date","setState","startDate","endDateChange","endDate","startTimeChange","time","startTime","endTimeChange","endTime","handleSubmit","e","preventDefault","state","_d","toString","split","console","log","allThreats","length","threats","componentDidMount","surveillance","componentWillMount","render","Date","getMonth","getDate","getFullYear","location","city","camera","protocol","streamName","playbackMode","playerName","options","accessKeyId","secretAccessKey","sessionToken","undefined","region","endpoint","kinesisVideo","KinesisVideo","kinesisVideoArchivedContent","KinesisVideoArchivedMedia","getDataEndpoint","StreamName","APIName","err","response","error","DataEndpoint","Endpoint","consoleInfo","getHLSStreamingSessionURL","PlaybackMode","HLSFragmentSelector","FragmentSelectorType","TimestampRange","StartTimestamp","EndTimestamp","ContainerFormat","val","DiscontinuityMode","DisplayFragmentTimestamp","MaxMediaPlaylistFragmentResults","parseInt","Expires","HLSStreamingSessionURL","playerElement","show","player","loadSource","attachMedia","on","Events","MANIFEST_PARSED","play","videoDisplayContainer","videoDisplay","videoContainer","videoInfo","mapStateToProps","link","surveillanceReducer","threatsReducer","mapDispatchStateToProps","dispatch","get","then","type","payload","data","threatsData","i","post","result","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport '../../App.css';\r\nimport LeftDrawer from '../Drawer/Drawer';\r\nimport * as videoStyles from  \"../../styles/video\";\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport { SignalingClient } from 'amazon-kinesis-video-streams-webrtc';\r\nimport backendURL from '../../backendUrl';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ReactHLS from 'react-hls';\r\nimport Hls from \"hls.js\";\r\nimport $ from \"jquery\";\r\nimport AWS from \"aws-sdk\";\r\nimport Button from '@material-ui/core/Button';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport TimePicker from 'rc-time-picker';\r\nimport 'rc-time-picker/assets/index.css';\r\n\r\nclass SurveillanceHistory extends Component {\r\n\r\n    constructor(props){\r\n        super(props); \r\n        this.state = {\r\n            startDate : null,\r\n            endDate : null,\r\n            startTime : null,\r\n            endTime : null\r\n        }\r\n        if(this.props.allThreats.length == 0)\r\n             this.props.threats();\r\n        \r\n    }\r\n    componentDidMount(){\r\n        this.props.surveillance();\r\n       \r\n       // console.log(\"user : \"  + sessionStorage.getItem(\"user\"))\r\n       // if(sessionStorage.getItem(\"user\") == null)\r\n         //   this.setState({redirectVar : <Redirect to= \"/signin\"/>})\r\n       \r\n    }\r\n    componentWillMount (){\r\n       \r\n    }\r\n\r\n    \r\n    startDateChange = date => \r\n    {\r\n        this.setState({ startDate : date })\r\n    }\r\n    endDateChange = date => \r\n    {\r\n        this.setState({ endDate : date })\r\n    }\r\n\r\n    startTimeChange = time =>\r\n    {\r\n        this.setState({startTime : time});\r\n    }\r\n    endTimeChange = time =>\r\n    {\r\n        this.setState({endTime : time});\r\n    }\r\n    handleSubmit = e => \r\n    {\r\n        e.preventDefault();\r\n        var startTime = this.state.startTime._d.toString().split(' ');\r\n        var startDate = this.state.startDate.toString().split(' ');\r\n        var endTime = this.state.endTime._d.toString().split(' ');\r\n        var endDate = this.state.endDate.toString().split(' ');\r\n\r\n        console.log(startTime);\r\n        console.log(startDate);\r\n\r\n        console.log(startTime[0]);\r\n        console.log(startDate[1]);\r\n\r\n        console.log(endTime[0]);\r\n        console.log(endTime[1]);\r\n\r\n    }\r\n    render() {\r\n        var date = (new Date().getMonth() + 1) + \"/\" + new Date().getDate() + \"/\" + new Date().getFullYear();\r\n        var location = \"37.3352° N, 121.8811° W\";\r\n        var city = \"San Jose\"\r\n        var camera = \"A103\";\r\n       \r\n        var protocol = 'HLS';\r\n        var streamName = 'threatStream';\r\n        var playbackMode = 'ON_DEMAND';\r\n        var playerName = 'HLS.js';\r\n\r\n        var options = {\r\n            accessKeyId: 'AKIAXBXQVKC4TY2ZUR6V',\r\n            secretAccessKey: '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',\r\n            sessionToken:  undefined,\r\n            region: 'us-east-1',\r\n            endpoint: undefined\r\n        }\r\n        var kinesisVideo = new AWS.KinesisVideo(options);\r\n        var kinesisVideoArchivedContent = new AWS.KinesisVideoArchivedMedia(options);\r\n        kinesisVideo.getDataEndpoint({\r\n            StreamName: streamName,\r\n            APIName: \"GET_HLS_STREAMING_SESSION_URL\"\r\n        }, function(err, response) {\r\n            if (err) { return console.error(err); }\r\n            console.log('Data endpoint: ' + response.DataEndpoint);\r\n            kinesisVideoArchivedContent.endpoint = new AWS.Endpoint(response.DataEndpoint);\r\n\r\n            // Step 3: Get a Streaming Session URL\r\n            var consoleInfo = 'Fetching ' + protocol + ' Streaming Session URL';\r\n            console.log(consoleInfo);\r\n\r\n                kinesisVideoArchivedContent.getHLSStreamingSessionURL({\r\n                    StreamName: streamName,\r\n                    PlaybackMode: playbackMode,\r\n                    HLSFragmentSelector: {\r\n                        FragmentSelectorType: 'SERVER_TIMESTAMP',\r\n                        TimestampRange: playbackMode === \"LIVE\" ? undefined : {\r\n                            StartTimestamp: new Date('2020-04-20T04:23:41.311Z'),\r\n                            EndTimestamp: new Date('2020-04-20T05:23:41.311Z')\r\n                            \r\n                        }\r\n                    },\r\n                    ContainerFormat: $('#containerFormat').val(),\r\n                    DiscontinuityMode: $('#discontinuityMode').val(),\r\n                    DisplayFragmentTimestamp: $('#displayFragmentTimestamp').val(),\r\n                    MaxMediaPlaylistFragmentResults: parseInt($('#maxResults').val()),\r\n                    Expires: parseInt($('#expires').val())\r\n                }, function(err, response) {\r\n                    if (err) { return console.error(err); }\r\n                    console.log('HLS Streaming Session URL: ' + response.HLSStreamingSessionURL);\r\n\r\n                    // Step 4: Give the URL to the video player.\r\n               \r\n                        var playerElement = $('#hlsjs');\r\n                        playerElement.show();\r\n                        var player = new Hls();\r\n                        console.log('Created HLS.js Player');\r\n                        player.loadSource(response.HLSStreamingSessionURL);\r\n                        player.attachMedia(playerElement[0]);\r\n                        console.log('Set player source');\r\n                        player.on(Hls.Events.MANIFEST_PARSED, function() {\r\n                            $('#hlsjs').play();\r\n                            console.log('Starting playback');\r\n                        });\r\n                    \r\n                });\r\n        \r\n        });\r\n\r\n            return (\r\n           <div>\r\n                 <LeftDrawer></LeftDrawer>\r\n                 <div style={videoStyles.videoDisplayContainer}  >\r\n                           <video style={videoStyles.videoDisplay} id=\"hlsjs\"  controls autoPlay></video>\r\n\r\n                      </div> \r\n                 <div  style={videoStyles.videoContainer}  >\r\n\r\n                 \r\n                   <div style = {videoStyles.videoInfo}> {/*  <DateTimePicker\r\n          onChange={this.onChange}\r\n          value={this.state.date}\r\n        /> */}\r\n        <form onSubmit = {this.handleSubmit}>\r\n            <h5> Enter Start Date <DatePicker selected = {this.state.startDate} onChange = {this.startDateChange} style ={'border : 1px'}/> Enter Start Time <TimePicker onChange={this.startTimeChange}> </TimePicker></h5>\r\n            <h5> Enter End Date <DatePicker selected = {this.state.endDate} onChange = {this.endDateChange}/> Enter End Time <TimePicker onChange={this.endTimeChange}></TimePicker></h5>\r\n            <Button type=\"submit\">Go</Button>\r\n        </form>\r\n        {/*  <form><h5>Start TimeStamp <input id=\"start\"></input>End TimeStamp <input id=\"end\"></input></h5><Button>Go</Button></form> */}\r\n              \r\n               </div>\r\n               </div>\r\n          \r\n                \r\n            </div> \r\n\r\n            );\r\n    \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n   \r\n    return {\r\n        link : state.surveillanceReducer.link,\r\n        allThreats : state.threatsReducer.allThreats,\r\n     }\r\n}\r\n\r\nconst mapDispatchStateToProps = dispatch => {\r\n    \r\n    return {\r\n        surveillance : () => {\r\n            axios.get(backendURL + '/live-surveillance').then(response=>{\r\n                dispatch({type: \"surveillance\",payload : response.data})\r\n            })\r\n                    \r\n            \r\n        },\r\n        threats : () => {\r\n          /*  axios.get(backendURL + '/all-threats').then(response=>{\r\n                console.log(response.data);\r\n              // const threatIds = response.data;\r\n               axios.post(backendURL + '/threat-details', response.data).then(response=>{\r\n                      //   console.log(result);\r\n                         dispatch({type: \"threats\",payload : response.data})\r\n                })\r\n\r\n                \r\n            }) */\r\n            axios.get(backendURL + '/all-threats').then(response=>{\r\n          \r\n                var threatsData = [];\r\n                //dispatch({type: \"threats\",payload : response.data})\r\n                for(var i = 0; i<response.data.length; i++)\r\n                {\r\n                    axios.post(backendURL + '/threat-details', response.data[i]).then(result=>{\r\n                        threatsData.push(result.data);\r\n                \r\n                    }).then(function()  {\r\n                        \r\n                    if(threatsData.length == response.data.length)    \r\n                        dispatch({type: \"threats\",payload : threatsData})\r\n                    })\r\n                }\r\n               \r\n            }) \r\n\r\n        },\r\n    }\r\n}\r\n\r\nexport default (connect(mapStateToProps,mapDispatchStateToProps)(SurveillanceHistory));  \r\n"]},"metadata":{},"sourceType":"module"}