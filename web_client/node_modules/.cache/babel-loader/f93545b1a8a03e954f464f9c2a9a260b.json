{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aysha\\\\Desktop\\\\Aysha\\\\SJSU\\\\Fall 2019\\\\CMPE 295A\\\\project\\\\frontend\\\\src\\\\components\\\\LiveSurveillance\\\\LiveSurveillance.js\";\nimport React, { Component } from \"react\";\nimport '../../App.css';\nimport LeftDrawer from '../Drawer/Drawer';\nimport * as videoStyles from \"../../styles/video\";\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport Timer from './Timer';\nimport { SignalingClient } from 'amazon-kinesis-video-streams-webrtc';\nimport backendURL from '../../backendUrl';\nimport { Redirect } from \"react-router-dom\";\nimport ReactHLS from 'react-hls';\nimport Hls from \"hls.js\";\nimport $ from \"jquery\";\nimport AWS from \"aws-sdk\";\n\nclass LiveSurveillance extends Component {\n  constructor(props) {\n    super(props);\n    if (this.props.allThreats.length == 0) this.props.threats();\n    this.state = {\n      redirectVar: sessionStorage.getItem(\"user\") === null ? React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }) : null\n    };\n  }\n\n  componentDidMount() {\n    this.props.surveillance(); // console.log(\"user : \"  + sessionStorage.getItem(\"user\"))\n  }\n\n  componentWillMount() {}\n\n  render() {\n    console.log(\"user : \" + sessionStorage.getItem(\"user\"));\n    var date = new Date().getMonth() + 1 + \"/\" + new Date().getDate() + \"/\" + new Date().getFullYear();\n    var location = \"37.3352° N, 121.8811° W\";\n    var city = \"San Jose\";\n    var camera = \"A103\";\n    var protocol = 'HLS';\n    var streamName = 'threatStream';\n    var playbackMode = 'LIVE';\n    var playerName = 'HLS.js';\n    var options = {\n      accessKeyId: 'AKIAXBXQVKC4TY2ZUR6V',\n      secretAccessKey: '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',\n      sessionToken: undefined,\n      region: 'us-east-1',\n      endpoint: undefined\n    };\n    var kinesisVideo = new AWS.KinesisVideo(options);\n    var kinesisVideoArchivedContent = new AWS.KinesisVideoArchivedMedia(options);\n    kinesisVideo.getDataEndpoint({\n      StreamName: streamName,\n      APIName: \"GET_HLS_STREAMING_SESSION_URL\"\n    }, function (err, response) {\n      if (err) {\n        return console.error(err);\n      }\n\n      console.log('Data endpoint: ' + response.DataEndpoint);\n      kinesisVideoArchivedContent.endpoint = new AWS.Endpoint(response.DataEndpoint); // Step 3: Get a Streaming Session URL\n\n      var consoleInfo = 'Fetching ' + protocol + ' Streaming Session URL';\n      console.log(consoleInfo);\n      kinesisVideoArchivedContent.getHLSStreamingSessionURL({\n        StreamName: streamName,\n        PlaybackMode: playbackMode,\n        HLSFragmentSelector: {\n          FragmentSelectorType: 'SERVER_TIMESTAMP',\n          TimestampRange: playbackMode === \"LIVE\" ? undefined : {\n            StartTimestamp: new Date($('#startTimestamp').val()),\n            EndTimestamp: new Date($('#endTimestamp').val())\n          }\n        },\n        ContainerFormat: $('#containerFormat').val(),\n        DiscontinuityMode: $('#discontinuityMode').val(),\n        DisplayFragmentTimestamp: $('#displayFragmentTimestamp').val(),\n        MaxMediaPlaylistFragmentResults: parseInt($('#maxResults').val()),\n        Expires: parseInt($('#expires').val())\n      }, function (err, response) {\n        if (err) {\n          return console.error(err);\n        }\n\n        console.log('HLS Streaming Session URL: ' + response.HLSStreamingSessionURL); // Step 4: Give the URL to the video player.\n\n        var playerElement = $('#hlsjs');\n        playerElement.show();\n        var player = new Hls();\n        console.log('Created HLS.js Player');\n        player.loadSource(response.HLSStreamingSessionURL);\n        player.attachMedia(playerElement[0]);\n        console.log('Set player source');\n        player.on(Hls.Events.MANIFEST_PARSED, function () {\n          $('#hlsjs').play();\n          console.log('Starting playback');\n        });\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.redirectVar, React.createElement(LeftDrawer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: videoStyles.videoDisplayContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      style: videoStyles.videoDisplay,\n      id: \"hlsjs\",\n      controls: true,\n      autoPlay: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: videoStyles.videoContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: videoStyles.videoInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \" Date: \", date, \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 Location: \", location, \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 City: \", city, \"  \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0  Camera: \", camera))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    link: state.surveillanceReducer.link,\n    allThreats: state.threatsReducer.allThreats\n  };\n};\n\nconst mapDispatchStateToProps = dispatch => {\n  return {\n    surveillance: () => {\n      axios.get(backendURL + '/live-surveillance').then(response => {\n        dispatch({\n          type: \"surveillance\",\n          payload: response.data\n        });\n      });\n    },\n    threats: () => {\n      /*  axios.get(backendURL + '/all-threats').then(response=>{\r\n            console.log(response.data);\r\n          // const threatIds = response.data;\r\n           axios.post(backendURL + '/threat-details', response.data).then(response=>{\r\n                  //   console.log(result);\r\n                     dispatch({type: \"threats\",payload : response.data})\r\n            })\r\n              \r\n        }) */\n      axios.get(backendURL + '/all-threats').then(response => {\n        var threatsData = []; //dispatch({type: \"threats\",payload : response.data})\n\n        for (var i = 0; i < response.data.length; i++) {\n          axios.post(backendURL + '/threat-details', response.data[i]).then(result => {\n            threatsData.push(result.data);\n          }).then(function () {\n            if (threatsData.length == response.data.length) dispatch({\n              type: \"threats\",\n              payload: threatsData\n            });\n          });\n        }\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchStateToProps)(LiveSurveillance);","map":{"version":3,"sources":["C:/Users/Aysha/Desktop/Aysha/SJSU/Fall 2019/CMPE 295A/project/frontend/src/components/LiveSurveillance/LiveSurveillance.js"],"names":["React","Component","LeftDrawer","videoStyles","axios","connect","Timer","SignalingClient","backendURL","Redirect","ReactHLS","Hls","$","AWS","LiveSurveillance","constructor","props","allThreats","length","threats","state","redirectVar","sessionStorage","getItem","componentDidMount","surveillance","componentWillMount","render","console","log","date","Date","getMonth","getDate","getFullYear","location","city","camera","protocol","streamName","playbackMode","playerName","options","accessKeyId","secretAccessKey","sessionToken","undefined","region","endpoint","kinesisVideo","KinesisVideo","kinesisVideoArchivedContent","KinesisVideoArchivedMedia","getDataEndpoint","StreamName","APIName","err","response","error","DataEndpoint","Endpoint","consoleInfo","getHLSStreamingSessionURL","PlaybackMode","HLSFragmentSelector","FragmentSelectorType","TimestampRange","StartTimestamp","val","EndTimestamp","ContainerFormat","DiscontinuityMode","DisplayFragmentTimestamp","MaxMediaPlaylistFragmentResults","parseInt","Expires","HLSStreamingSessionURL","playerElement","show","player","loadSource","attachMedia","on","Events","MANIFEST_PARSED","play","videoDisplayContainer","videoDisplay","videoContainer","videoInfo","mapStateToProps","link","surveillanceReducer","threatsReducer","mapDispatchStateToProps","dispatch","get","then","type","payload","data","threatsData","i","post","result","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport '../../App.css';\r\nimport LeftDrawer from '../Drawer/Drawer';\r\nimport * as videoStyles from  \"../../styles/video\";\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport Timer from './Timer';\r\nimport { SignalingClient } from 'amazon-kinesis-video-streams-webrtc';\r\nimport backendURL from '../../backendUrl';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ReactHLS from 'react-hls';\r\nimport Hls from \"hls.js\";\r\nimport $ from \"jquery\";\r\nimport AWS from \"aws-sdk\";\r\n\r\nclass LiveSurveillance extends Component {\r\n\r\n    constructor(props){\r\n        super(props); \r\n        if(this.props.allThreats.length == 0)\r\n             this.props.threats();\r\n        this.state ={\r\n            redirectVar : (sessionStorage.getItem(\"user\") === null) ? <Redirect to= \"/signin\"/> : null\r\n        }\r\n        \r\n    }\r\n    componentDidMount(){\r\n        this.props.surveillance();\r\n       \r\n       // console.log(\"user : \"  + sessionStorage.getItem(\"user\"))\r\n       \r\n       \r\n    }\r\n    componentWillMount (){\r\n       \r\n    }\r\n    render() {\r\n        console.log(\"user : \"  + sessionStorage.getItem(\"user\"))\r\n        var date = (new Date().getMonth() + 1) + \"/\" + new Date().getDate() + \"/\" + new Date().getFullYear();\r\n        var location = \"37.3352° N, 121.8811° W\";\r\n        var city = \"San Jose\"\r\n        var camera = \"A103\";\r\n       \r\n        var protocol = 'HLS';\r\n        var streamName = 'threatStream';\r\n        var playbackMode = 'LIVE';\r\n        var playerName = 'HLS.js';\r\n\r\n        var options = {\r\n            accessKeyId: 'AKIAXBXQVKC4TY2ZUR6V',\r\n            secretAccessKey: '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',\r\n            sessionToken:  undefined,\r\n            region: 'us-east-1',\r\n            endpoint: undefined\r\n        }\r\n        var kinesisVideo = new AWS.KinesisVideo(options);\r\n        var kinesisVideoArchivedContent = new AWS.KinesisVideoArchivedMedia(options);\r\n        kinesisVideo.getDataEndpoint({\r\n            StreamName: streamName,\r\n            APIName: \"GET_HLS_STREAMING_SESSION_URL\"\r\n        }, function(err, response) {\r\n            if (err) { return console.error(err); }\r\n            console.log('Data endpoint: ' + response.DataEndpoint);\r\n            kinesisVideoArchivedContent.endpoint = new AWS.Endpoint(response.DataEndpoint);\r\n\r\n            // Step 3: Get a Streaming Session URL\r\n            var consoleInfo = 'Fetching ' + protocol + ' Streaming Session URL';\r\n            console.log(consoleInfo);\r\n\r\n                kinesisVideoArchivedContent.getHLSStreamingSessionURL({\r\n                    StreamName: streamName,\r\n                    PlaybackMode: playbackMode,\r\n                    HLSFragmentSelector: {\r\n                        FragmentSelectorType: 'SERVER_TIMESTAMP',\r\n                        TimestampRange: playbackMode === \"LIVE\" ? undefined : {\r\n                            StartTimestamp: new Date($('#startTimestamp').val()),\r\n                            EndTimestamp: new Date($('#endTimestamp').val())\r\n                        }\r\n                    },\r\n                    ContainerFormat: $('#containerFormat').val(),\r\n                    DiscontinuityMode: $('#discontinuityMode').val(),\r\n                    DisplayFragmentTimestamp: $('#displayFragmentTimestamp').val(),\r\n                    MaxMediaPlaylistFragmentResults: parseInt($('#maxResults').val()),\r\n                    Expires: parseInt($('#expires').val())\r\n                }, function(err, response) {\r\n                    if (err) { return console.error(err); }\r\n                    console.log('HLS Streaming Session URL: ' + response.HLSStreamingSessionURL);\r\n\r\n                    // Step 4: Give the URL to the video player.\r\n               \r\n                        var playerElement = $('#hlsjs');\r\n                        playerElement.show();\r\n                        var player = new Hls();\r\n                        console.log('Created HLS.js Player');\r\n                        player.loadSource(response.HLSStreamingSessionURL);\r\n                        player.attachMedia(playerElement[0]);\r\n                        console.log('Set player source');\r\n                        player.on(Hls.Events.MANIFEST_PARSED, function() {\r\n                            $('#hlsjs').play();\r\n                            console.log('Starting playback');\r\n                        });\r\n                    \r\n                });\r\n        \r\n        });\r\n\r\n            return (\r\n           <div>\r\n               {this.state.redirectVar}\r\n                 <LeftDrawer></LeftDrawer>\r\n                 <div style={videoStyles.videoDisplayContainer}  >\r\n                           <video style={videoStyles.videoDisplay} id=\"hlsjs\"  controls autoPlay></video>\r\n\r\n                      </div> \r\n                 <div  style={videoStyles.videoContainer}  >\r\n\r\n                 \r\n                   <div style = {videoStyles.videoInfo}>{/* <Timer></Timer> */}<h5> Date: {date} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Location: {location} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; City: {city}  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Camera: {camera}</h5></div>\r\n               \r\n               </div>\r\n          \r\n                \r\n            </div> \r\n\r\n            );\r\n    \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n   \r\n    return {\r\n        link : state.surveillanceReducer.link,\r\n        allThreats : state.threatsReducer.allThreats,\r\n     }\r\n}\r\n\r\nconst mapDispatchStateToProps = dispatch => {\r\n    \r\n    return {\r\n        surveillance : () => {\r\n            axios.get(backendURL + '/live-surveillance').then(response=>{\r\n                dispatch({type: \"surveillance\",payload : response.data})\r\n            })\r\n                    \r\n            \r\n        },\r\n        threats : () => {\r\n          /*  axios.get(backendURL + '/all-threats').then(response=>{\r\n                console.log(response.data);\r\n              // const threatIds = response.data;\r\n               axios.post(backendURL + '/threat-details', response.data).then(response=>{\r\n                      //   console.log(result);\r\n                         dispatch({type: \"threats\",payload : response.data})\r\n                })\r\n\r\n                \r\n            }) */\r\n            axios.get(backendURL + '/all-threats').then(response=>{\r\n          \r\n                var threatsData = [];\r\n                //dispatch({type: \"threats\",payload : response.data})\r\n                for(var i = 0; i<response.data.length; i++)\r\n                {\r\n                    axios.post(backendURL + '/threat-details', response.data[i]).then(result=>{\r\n                        threatsData.push(result.data);\r\n                \r\n                    }).then(function()  {\r\n                        \r\n                    if(threatsData.length == response.data.length)    \r\n                        dispatch({type: \"threats\",payload : threatsData})\r\n                    })\r\n                }\r\n               \r\n            }) \r\n\r\n        },\r\n    }\r\n}\r\n\r\nexport default (connect(mapStateToProps,mapDispatchStateToProps)(LiveSurveillance));  \r\n"]},"metadata":{},"sourceType":"module"}