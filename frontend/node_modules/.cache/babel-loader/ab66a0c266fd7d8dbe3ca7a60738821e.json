{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aysha\\\\Desktop\\\\Aysha\\\\SJSU\\\\Fall 2019\\\\CMPE 295A\\\\project-frontend\\\\frontend\\\\src\\\\components\\\\Notifications\\\\Email.js\";\nimport React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport '../../App.css';\nimport Button from '@material-ui/core/Button';\nimport { signupForm } from \"../../styles/signupForm\";\nimport { container } from \"../../styles/container\";\nimport * as inputField from \"../../styles/inputField\";\nimport { button } from \"../../styles/button\";\n\nclass Email extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = () => {};\n\n    this.state = {\n      feedback: 'Threat Detection Alert',\n      name: 'Aysha Godil',\n      email: 'ayshagodil@gmail.com'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  renderField(field) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({\n      style: field.style,\n      placeholder: field.placeholder,\n      type: field.type\n    }, field.input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })));\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"test-mailing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Let's see if it works\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"test-mailing\",\n      name: \"test-mailing\",\n      onChange: this.handleChange,\n      placeholder: \"Post some lorem ipsum here\",\n      required: true,\n      value: this.state.feedback,\n      style: {\n        width: '100%',\n        height: '150px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Submit\",\n      className: \"btn btn--submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n  handleChange(event) {\n    this.setState({\n      feedback: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    /* var email = require('emailjs');\r\n      var server = email.server.connect({\r\n      user: 'ayshagodil@gmail.com',\r\n      password: 'aGPass01',\r\n      host: 'smtp.gmail.com',\r\n      ssl: true\r\n    });\r\n    \r\n    server.send({\r\n      text: 'Hello',\r\n      from: 'NodeJS',\r\n      to: 'Aysha <ashgodil@gmail.com>',\r\n      cc: '',\r\n      subject: 'Greetings'\r\n    }, function (err, message) {\r\n      console.log(err || message);\r\n    }); */\n    const templateId = 'email';\n    this.sendFeedback(templateId, {\n      subject: 'Threat Detection Alert',\n      content: 'Threat Detected',\n      email: 'ayshagodil@gmail.com',\n      from_name: this.state.name,\n      reply_to: this.state.email\n    });\n  }\n\n  sendFeedback(templateId, variables) {\n    window.emailjs.send('gmail', templateId, variables).catch(error => console.error('Error found:', error));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    authFlag: state.signupReducer.authFlag,\n    username: state.signupReducer.username,\n    password: state.signupReducer.password //  login_status : state.reducer.login_status,\n    // type : state.reducer.type  \n\n  };\n};\n\nconst mapDispatchStateToProps = dispatch => {\n  return {\n    signup: values => {\n      dispatch({\n        type: \"signup\",\n        payload: values\n      });\n    }\n  };\n};\n\nexport default Email;","map":{"version":3,"sources":["C:/Users/Aysha/Desktop/Aysha/SJSU/Fall 2019/CMPE 295A/project-frontend/frontend/src/components/Notifications/Email.js"],"names":["React","Component","Field","reduxForm","connect","Button","signupForm","container","inputField","button","Email","constructor","props","onSubmit","state","feedback","name","email","handleChange","bind","handleSubmit","renderField","field","style","placeholder","type","input","componentDidMount","render","width","height","event","setState","target","value","templateId","sendFeedback","subject","content","from_name","reply_to","variables","window","emailjs","send","catch","error","console","mapStateToProps","authFlag","signupReducer","username","password","mapDispatchStateToProps","dispatch","signup","values","payload"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,eAAP;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,OAAO,KAAKC,UAAZ,MAA6B,yBAA7B;AACA,SAAQC,MAAR,QAAqB,qBAArB;;AAEA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAE1BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsBnBC,QAtBmB,GAsBR,MAAM,CAEhB,CAxBkB;;AAEf,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,wBAAZ;AAAsCC,MAAAA,IAAI,EAAE,aAA5C;AAA2DC,MAAAA,KAAK,EAAE;AAAlE,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEHE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEf,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAO,MAAA,KAAK,EAAGA,KAAK,CAACC,KAArB;AAA6B,MAAA,WAAW,EAAED,KAAK,CAACE,WAAhD;AAA6D,MAAA,IAAI,EAAEF,KAAK,CAACG;AAAzE,OAAmFH,KAAK,CAACI,KAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADL,CADH;AAKH;;AAIFC,EAAAA,iBAAiB,GACjB,CAEC;;AAKAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,IAAI,EAAC,cAFP;AAGE,MAAA,QAAQ,EAAE,KAAKV,YAHjB;AAIE,MAAA,WAAW,EAAC,4BAJd;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,QANpB;AAOE,MAAA,KAAK,EAAE;AAACc,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,MAAM,EAAE;AAAxB,OAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAaE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,SAAS,EAAC,iBAA9C;AAAgE,MAAA,OAAO,EAAE,KAAKV,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADJ;AAiBH;;AACDF,EAAAA,YAAY,CAACa,KAAD,EAAQ;AACpB,SAAKC,QAAL,CAAc;AAACjB,MAAAA,QAAQ,EAAEgB,KAAK,CAACE,MAAN,CAAaC;AAAxB,KAAd;AACD;;AACDd,EAAAA,YAAY,CAAEW,KAAF,EAAS;AACnB;;;;;;;;;;;;;;;;;AAkBH,UAAMI,UAAU,GAAG,OAAnB;AAED,SAAKC,YAAL,CAAkBD,UAAlB,EAA6B;AAACE,MAAAA,OAAO,EAAE,wBAAV;AAAmCC,MAAAA,OAAO,EAAC,iBAA3C;AAA6DrB,MAAAA,KAAK,EAAE,sBAApE;AAA4FsB,MAAAA,SAAS,EAAE,KAAKzB,KAAL,CAAWE,IAAlH;AAAwHwB,MAAAA,QAAQ,EAAE,KAAK1B,KAAL,CAAWG;AAA7I,KAA7B;AACG;;AAEDmB,EAAAA,YAAY,CAAED,UAAF,EAAcM,SAAd,EAAyB;AACtCC,IAAAA,MAAM,CAACC,OAAP,CAAeC,IAAf,CACE,OADF,EACWT,UADX,EAEEM,SAFF,EAIGI,KAJH,CAISC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,cAAd,EAA8BA,KAA9B,CAJlB;AAKE;;AAhF2B;;AAqF9B,MAAME,eAAe,GAAGlC,KAAK,IAAG;AAE5B,SAAO;AACHmC,IAAAA,QAAQ,EAAGnC,KAAK,CAACoC,aAAN,CAAoBD,QAD5B;AAEHE,IAAAA,QAAQ,EAAGrC,KAAK,CAACoC,aAAN,CAAoBC,QAF5B;AAGHC,IAAAA,QAAQ,EAAGtC,KAAK,CAACoC,aAAN,CAAoBE,QAH5B,CAIL;AACC;;AALI,GAAP;AAOH,CATD;;AAWA,MAAMC,uBAAuB,GAAGC,QAAQ,IAAI;AACxC,SAAO;AACHC,IAAAA,MAAM,EAAIC,MAAD,IAAY;AACTF,MAAAA,QAAQ,CAAC;AAAC7B,QAAAA,IAAI,EAAE,QAAP;AAAgBgC,QAAAA,OAAO,EAAGD;AAA1B,OAAD,CAAR;AAEX;AAJE,GAAP;AAMH,CAPD;;AAQA,eAAe9C,KAAf","sourcesContent":["             \r\nimport React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport '../../App.css';\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport {signupForm} from \"../../styles/signupForm\";\r\nimport {container} from \"../../styles/container\";\r\nimport * as inputField from  \"../../styles/inputField\";\r\nimport {button} from \"../../styles/button\";\r\n\r\nclass Email extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { feedback: 'Threat Detection Alert', name: 'Aysha Godil', email: 'ayshagodil@gmail.com' };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n    renderField(field) {\r\n     \r\n        return (\r\n           <div>\r\n                <input style= {field.style}  placeholder={field.placeholder} type={field.type} {...field.input} />\r\n            </div>   \r\n        );\r\n    }\r\n\r\n  \r\n \r\n   componentDidMount()\r\n   {\r\n    \r\n   }\r\n    onSubmit = () => {\r\n    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"test-mailing\">\r\n              <h1>Let's see if it works</h1>\r\n              <div>\r\n                <textarea\r\n                  id=\"test-mailing\"\r\n                  name=\"test-mailing\"\r\n                  onChange={this.handleChange}\r\n                  placeholder=\"Post some lorem ipsum here\"\r\n                  required\r\n                  value={this.state.feedback}\r\n                  style={{width: '100%', height: '150px'}}\r\n                />\r\n              </div>\r\n              <input type=\"button\" value=\"Submit\" className=\"btn btn--submit\" onClick={this.handleSubmit} />\r\n            </form>\r\n          )\r\n    }\r\n    handleChange(event) {\r\n    this.setState({feedback: event.target.value})\r\n  }\r\n  handleSubmit (event) {\r\n    /* var email = require('emailjs');\r\n\r\n    var server = email.server.connect({\r\n      user: 'ayshagodil@gmail.com',\r\n      password: 'aGPass01',\r\n      host: 'smtp.gmail.com',\r\n      ssl: true\r\n    });\r\n    \r\n    server.send({\r\n      text: 'Hello',\r\n      from: 'NodeJS',\r\n      to: 'Aysha <ashgodil@gmail.com>',\r\n      cc: '',\r\n      subject: 'Greetings'\r\n    }, function (err, message) {\r\n      console.log(err || message);\r\n    }); */\r\n\tconst templateId = 'email';\r\n\r\nthis.sendFeedback(templateId,{subject: 'Threat Detection Alert',content:'Threat Detected',email: 'ayshagodil@gmail.com', from_name: this.state.name, reply_to: this.state.email})\r\n  }\r\n\r\n  sendFeedback (templateId, variables) {\r\n\twindow.emailjs.send(\r\n  \t'gmail', templateId,\r\n  \tvariables\r\n  \t)\r\n  \t.catch(error => console.error('Error found:', error))\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n   \r\n    return {\r\n        authFlag : state.signupReducer.authFlag,\r\n        username : state.signupReducer.username,\r\n        password : state.signupReducer.password\r\n      //  login_status : state.reducer.login_status,\r\n       // type : state.reducer.type  \r\n     }\r\n}\r\n\r\nconst mapDispatchStateToProps = dispatch => {\r\n    return {\r\n        signup : (values) => {\r\n                    dispatch({type: \"signup\",payload : values})\r\n            \r\n        }\r\n    }\r\n}\r\nexport default Email;  \r\n"]},"metadata":{},"sourceType":"module"}