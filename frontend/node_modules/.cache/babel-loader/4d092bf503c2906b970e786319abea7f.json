{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aysha\\\\Desktop\\\\Aysha\\\\SJSU\\\\Fall 2019\\\\CMPE 295A\\\\project\\\\frontend\\\\src\\\\components\\\\ThreatSummary\\\\ThreatSummary.js\";\nimport React, { Component } from \"react\";\nimport '../../App.css';\nimport LeftDrawer from '../Drawer/Drawer';\nimport * as imageStyles from \"../../styles/image\";\nimport * as videoStyles from \"../../styles/video\";\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport * as threats from \"./Threats\";\nimport backendURL from '../../backendUrl';\nimport { Modal } from 'reactstrap';\nimport { ModalHeader } from 'reactstrap';\nimport { ModalBody } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\nimport * as styles from \"../../styles/settings\";\nimport * as modalStyles from \"../../styles/modal\";\n\nclass ThreatSummary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = e => {\n      console.log(this.state.modalIsOpen);\n      this.setState({\n        modalIsOpen: !this.state.modalIsOpen\n      });\n    };\n\n    this.state = {\n      modalIsOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  componentDidMount() {//  this.props.summary();\n  }\n\n  render() {\n    var threatDetails = {};\n    /*switch(this.props.id)\r\n    {\r\n        case 1: threatDetails = threats[0]; break\r\n        case 2: threatDetails = threats[1]; break\r\n        case 3: threatDetails = threats[2]; break\r\n        case 4: threatDetails = threats[3]; break\r\n        case 5: threatDetails = threats[4]; break\r\n        case 6: threatDetails = threats[5]; break\r\n        case 7: threatDetails = threats[6]; break\r\n        case 8: threatDetails = threats[7]; break\r\n        }*/\n\n    var date = new Date().getMonth() + 1 + \"/\" + new Date().getDate() + \"/\" + new Date().getFullYear();\n    var location = \"37.3352° N, 121.8811° W\";\n    var city = \"San Jose\";\n    var camera = \"A103\";\n    var certainty = \"93%\";\n    var severity = \"High\";\n    console.log(this.state.modalIsOpen);\n    var closeModal = React.createElement(\"button\", {\n      className: \"close\",\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Close this modal and check if it works or don't do it but check it if works \");\n    return React.createElement(\"div\", {\n      style: videoStyles.background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: videoStyles.videoContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(LeftDrawer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: videoStyles.videoFrame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      style: modalStyles.modal,\n      isOpen: this.state.modalIsOpen,\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      close: closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Send Feedback to Improve Threat Detection\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"hello testing if this is working because I'm not sure if it is and I have to confrim wheter it is working or not so I'm checking if its working or not with this\")), React.createElement(\"img\", {\n      style: videoStyles.video,\n      src: '' + this.props.link,\n      width: \"100%;\",\n      height: \"500px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: videoStyles.videoInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \" Date: \", date, \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 Location: \", location, \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 City: \", city, \"  \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0  Camera: \", camera, \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0  Severity: \", severity, \"  \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0  Certainty: \", certainty), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Certain this is not a threat? \", React.createElement(Link, {\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Send Feedback Now\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    link: state.threatsReducer.link,\n    id: state.threatsReducer.id\n  };\n};\n\nconst mapDispatchStateToProps = dispatch => {\n  return {\n    summary: () => {\n      axios.get(backendURL + '/threat-summary').then(response => {\n        dispatch({\n          type: \"summary\",\n          payload: response.data\n        });\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchStateToProps)(ThreatSummary);","map":{"version":3,"sources":["C:/Users/Aysha/Desktop/Aysha/SJSU/Fall 2019/CMPE 295A/project/frontend/src/components/ThreatSummary/ThreatSummary.js"],"names":["React","Component","LeftDrawer","imageStyles","videoStyles","axios","connect","threats","backendURL","Modal","ModalHeader","ModalBody","Link","styles","modalStyles","ThreatSummary","constructor","props","toggleModal","e","console","log","state","modalIsOpen","setState","bind","componentDidMount","render","threatDetails","date","Date","getMonth","getDate","getFullYear","location","city","camera","certainty","severity","closeModal","background","videoContainer","videoFrame","modal","video","link","videoInfo","mapStateToProps","threatsReducer","id","mapDispatchStateToProps","dispatch","summary","get","then","response","type","payload","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport '../../App.css';\r\nimport LeftDrawer from '../Drawer/Drawer';\r\nimport * as imageStyles from  \"../../styles/image\";\r\nimport * as videoStyles from  \"../../styles/video\";\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport * as threats from \"./Threats\";\r\nimport backendURL from '../../backendUrl';\r\nimport { Modal} from 'reactstrap';\r\nimport { ModalHeader} from 'reactstrap';\r\nimport {ModalBody} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as styles from \"../../styles/settings\"; \r\nimport * as modalStyles from \"../../styles/modal\";\r\n\r\nclass ThreatSummary extends Component {\r\n\r\n    constructor(props){\r\n        super(props); \r\n        this.state = {\r\n            modalIsOpen : false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n\r\n    }\r\n    componentDidMount(){\r\n      //  this.props.summary();\r\n    }\r\n    toggleModal = (e) =>{\r\n        console.log(this.state.modalIsOpen);\r\n        this.setState({modalIsOpen : !this.state.modalIsOpen});\r\n    }\r\n    render() {\r\n        var threatDetails = {};\r\n        /*switch(this.props.id)\r\n        {\r\n            case 1: threatDetails = threats[0]; break\r\n            case 2: threatDetails = threats[1]; break\r\n            case 3: threatDetails = threats[2]; break\r\n            case 4: threatDetails = threats[3]; break\r\n            case 5: threatDetails = threats[4]; break\r\n            case 6: threatDetails = threats[5]; break\r\n            case 7: threatDetails = threats[6]; break\r\n            case 8: threatDetails = threats[7]; break\r\n\r\n\r\n        }*/\r\n\r\n        var date = (new Date().getMonth() + 1) + \"/\" + new Date().getDate() + \"/\" + new Date().getFullYear();\r\n        var location = \"37.3352° N, 121.8811° W\";\r\n        var city = \"San Jose\"\r\n        var camera = \"A103\";\r\n        var certainty = \"93%\";\r\n        var severity = \"High\";\r\n        console.log(this.state.modalIsOpen);\r\n        var closeModal =  <button className=\"close\" onClick={this.toggleModal}>Close this modal and check if it works or don't do it but check it if works </button>;\r\n        return (\r\n        <div  style={videoStyles.background} >\r\n         \r\n           \r\n            <div  style={videoStyles.videoContainer}  >\r\n            <LeftDrawer></LeftDrawer>\r\n            <div style={videoStyles.videoFrame}>\r\n            <Modal\r\n            style = {modalStyles.modal}\r\n          isOpen = {this.state.modalIsOpen}\r\n          toggle = {this.toggleModal}\r\n        >\r\n            <ModalHeader toggle={this.toggleModal} close={closeModal}>Send Feedback to Improve Threat Detection</ModalHeader>\r\n\r\n            <ModalBody>hello testing if this is working because I'm not sure if it is and I have to confrim wheter it is working or not so I'm checking if its working or not with this</ModalBody>\r\n         \r\n        </Modal>\r\n                <img style={videoStyles.video} src={''+this.props.link} width='100%;' height='500px'></img>\r\n            </div>\r\n              {/*   <iframe style={videoStyles.video} width=\"700px\" height=\"400px\" src=\"https://295-videos.s3.us-east-2.amazonaws.com/San-Jose-16th-Oct-2019.mp4\"></iframe> */}\r\n                <div style = {videoStyles.videoInfo}><h5> Date: {date} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Location: {location} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; City: {city}  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Camera: {camera} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Severity: {severity}  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Certainty: {certainty}</h5>\r\n                <div><h5>Certain this is not a threat? <Link onClick = {this.toggleModal}>Send Feedback Now</Link></h5>\r\n               \r\n                </div>\r\n                </div>\r\n              \r\n            </div>\r\n   \r\n        </div> \r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n   \r\n    return {\r\n        link : state.threatsReducer.link,\r\n        id : state.threatsReducer.id\r\n     }\r\n}\r\n\r\nconst mapDispatchStateToProps = dispatch => {\r\n    return {\r\n        summary : () => {\r\n            axios.get(backendURL + '/threat-summary').then(response=>{\r\n                dispatch({type: \"summary\",payload : response.data})\r\n            })\r\n                    \r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport default (connect(mapStateToProps,mapDispatchStateToProps)(ThreatSummary));  \r\n"]},"metadata":{},"sourceType":"module"}