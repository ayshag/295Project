{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aysha\\\\Desktop\\\\Aysha\\\\SJSU\\\\Fall 2019\\\\CMPE 295A\\\\project\\\\frontend\\\\src\\\\components\\\\Timer\\\\Timer.js\";\nimport React, { Component } from \"react\";\nimport '../../App.css';\nimport LeftDrawer from '../Drawer/Drawer';\nimport * as videoStyles from \"../../styles/video\";\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.update = setInterval(() => {\n      this.setState({\n        time: new Date()\n      });\n    }, 1 * 1000); // every 1 seconds\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.update);\n  }\n\n  render() {\n    const time = this.state.time;\n    return React.createElement(\"h3\", {\n      style: videoStyles.timer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, time.toLocaleTimeString());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    link: state.surveillanceReducer.link,\n    timer: state.surveillanceReducer.timer\n  };\n};\n\nconst mapDispatchStateToProps = dispatch => {\n  return {\n    link: () => {\n      axios.get('http://localhost:3001/live-surveillance').then(response => {\n        dispatch({\n          type: \"surveillanceLink\",\n          payload: response.data\n        });\n      });\n    },\n    timer: time => {\n      dispatch({\n        type: \"surveillanceTimer\",\n        payload: time\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchStateToProps)(Timer);","map":{"version":3,"sources":["C:/Users/Aysha/Desktop/Aysha/SJSU/Fall 2019/CMPE 295A/project/frontend/src/components/Timer/Timer.js"],"names":["React","Component","LeftDrawer","videoStyles","axios","connect","Timer","constructor","props","state","time","Date","componentDidMount","update","setInterval","setState","componentWillUnmount","clearInterval","render","timer","toLocaleTimeString","mapStateToProps","link","surveillanceReducer","mapDispatchStateToProps","dispatch","get","then","response","type","payload","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,WAAZ,MAA8B,oBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAIA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAE1BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAR,KAAb;AACH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,MAAL,GAAcC,WAAW,CAAC,MAAM;AAC5B,WAAKC,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AAAR,OAAd;AACH,KAFwB,EAEtB,IAAI,IAFkB,CAAzB,CADe,CAGD;AACjB;;AAEDK,EAAAA,oBAAoB,GAAG;AACnBC,IAAAA,aAAa,CAAC,KAAKJ,MAAN,CAAb;AACH;;AACDK,EAAAA,MAAM,GAAG;AAAA,UAEGR,IAFH,GAEY,KAAKD,KAFjB,CAEGC,IAFH;AAGL,WACD;AAAI,MAAA,KAAK,EAAEP,WAAW,CAACgB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BT,IAAI,CAACU,kBAAL,EAA/B,CADC;AAIH;;AAtByB;;AA0B9B,MAAMC,eAAe,GAAGZ,KAAK,IAAG;AAE5B,SAAO;AACHa,IAAAA,IAAI,EAAGb,KAAK,CAACc,mBAAN,CAA0BD,IAD9B;AAEHH,IAAAA,KAAK,EAAGV,KAAK,CAACc,mBAAN,CAA0BJ;AAF/B,GAAP;AAIH,CAND;;AAQA,MAAMK,uBAAuB,GAAGC,QAAQ,IAAI;AACxC,SAAO;AACHH,IAAAA,IAAI,EAAG,MAAM;AACTlB,MAAAA,KAAK,CAACsB,GAAN,CAAU,yCAAV,EAAqDC,IAArD,CAA0DC,QAAQ,IAAE;AAChEH,QAAAA,QAAQ,CAAC;AAACI,UAAAA,IAAI,EAAE,kBAAP;AAA0BC,UAAAA,OAAO,EAAGF,QAAQ,CAACG;AAA7C,SAAD,CAAR;AACH,OAFD;AAGC,KALF;AAMHZ,IAAAA,KAAK,EAAIT,IAAD,IAAU;AAEVe,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE,mBAAP;AAA2BC,QAAAA,OAAO,EAAGpB;AAArC,OAAD,CAAR;AAEP;AAVE,GAAP;AAcH,CAfD;;AAiBA,eAAgBL,OAAO,CAACgB,eAAD,EAAiBG,uBAAjB,CAAP,CAAiDlB,KAAjD,CAAhB","sourcesContent":["import React, { Component } from \"react\";\r\nimport '../../App.css';\r\nimport LeftDrawer from '../Drawer/Drawer';\r\nimport * as videoStyles from  \"../../styles/video\";\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nclass Timer extends Component {\r\n\r\n    constructor(props){\r\n        super(props); \r\n        this.state = { time: new Date() };      \r\n    }\r\n    componentDidMount(){\r\n        this.update = setInterval(() => {\r\n            this.setState({ time: new Date() });\r\n        }, 1 * 1000); // every 1 seconds\r\n    }\r\n\r\n    componentWillUnmount() { \r\n        clearInterval(this.update);\r\n    }\r\n    render() {\r\n     \r\n        const { time } = this.state; \r\n        return (\r\n       <h3 style={videoStyles.timer}>{time.toLocaleTimeString()}</h3>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n   \r\n    return {\r\n        link : state.surveillanceReducer.link,\r\n        timer : state.surveillanceReducer.timer\r\n     }\r\n}\r\n\r\nconst mapDispatchStateToProps = dispatch => {\r\n    return {\r\n        link : () => {\r\n            axios.get('http://localhost:3001/live-surveillance').then(response=>{\r\n                dispatch({type: \"surveillanceLink\",payload : response.data})\r\n            })\r\n            },\r\n        timer : (time) => {\r\n            \r\n                dispatch({type: \"surveillanceTimer\",payload : time})\r\n        \r\n        }  \r\n            \r\n        \r\n    }\r\n}\r\n\r\nexport default (connect(mapStateToProps,mapDispatchStateToProps)(Timer));  \r\n"]},"metadata":{},"sourceType":"module"}