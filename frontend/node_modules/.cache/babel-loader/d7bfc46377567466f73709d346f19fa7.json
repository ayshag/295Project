{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aysha\\\\Desktop\\\\Aysha\\\\SJSU\\\\Fall 2019\\\\CMPE 295A\\\\project-frontend\\\\frontend\\\\src\\\\components\\\\SignUp\\\\SignUp.js\";\nimport React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport '../../App.css'; //import axios from 'axios';\n//import {Redirect} from 'react-router';\n\nimport Button from '@material-ui/core/Button';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = values => {// this.props.login(values, () => {\n      // this.props.history.push(\"/login\");\n      //});\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  renderField(field) {\n    const _field$meta = field.meta,\n          touched = _field$meta.touched,\n          error = _field$meta.error;\n    const className = \"form-group \".concat(touched && error ? \"has-danger\" : \"\");\n    return React.createElement(\"div\", {\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({\n      className: \"form-control\",\n      placeholder: field.placeholder,\n      type: field.type\n    }, field.input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text-help\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, touched ? error : \"\"));\n  }\n\n  componentDidMount() {//set the with credentials to true\n    //axios.defaults.withCredentials = true;\n  }\n\n  render() {\n    // const { handleSubmit } = this.props;\n    //  let redirectVar = null;\n    //  let notvalidatedalert = null;\n    //if(this.props.authFlag)\n    //{            \n    // if (cookie.load('cookie')) {\n    //    console.log(\"Redirecting to Home\");\n    //    redirectVar = <Redirect to=\"/home\" />\n    // }\n    //else if (this.props.authFlag === false && (this.props.login_status === \"Invalid Information\"  || this.props.login_status === \"Username does not exist\"))\n    //{\n    //  notvalidatedalert = <h6>Incorrect username or password entered. Please try again</h6>\n    // }\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: console.log('SignUp'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"SignUp\"), React.createElement(Field, {\n      placeholder: \"First Name\",\n      name: \"firstname\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Field, {\n      placeholder: \"Last Name\",\n      name: \"lastname\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Field, {\n      placeholder: \"Username\",\n      name: \"username\",\n      type: \"username\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Field, {\n      placeholder: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Field, {\n      placeholder: \"Confirm Password\",\n      name: \"confirm\",\n      type: \"password\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      color: \"secondary\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"SignUp\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    authFlag: state.signupReducer.authFlag // username : state.reducer.username,\n    //  login_status : state.reducer.login_status,\n    // type : state.reducer.type  \n\n  };\n};\n\nconst mapDispatchStateToProps = dispatch => {\n  return {\n    signup: values => {\n      dispatch({\n        type: \"signup\",\n        payload: values\n      });\n    }\n  };\n};\n\nexport default reduxForm({\n  // validate,\n  form: \"SignupForm\",\n  reducer: \"signupReducer\"\n})(connect(mapStateToProps, mapDispatchStateToProps)(SignUp));","map":{"version":3,"sources":["C:/Users/Aysha/Desktop/Aysha/SJSU/Fall 2019/CMPE 295A/project-frontend/frontend/src/components/SignUp/SignUp.js"],"names":["React","Component","Field","reduxForm","connect","Button","SignUp","constructor","props","onSubmit","values","bind","renderField","field","meta","touched","error","className","placeholder","type","input","componentDidMount","render","console","log","mapStateToProps","state","authFlag","signupReducer","mapDispatchStateToProps","dispatch","signup","payload","form","reducer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport '../../App.css';\r\n//import axios from 'axios';\r\n//import {Redirect} from 'react-router';\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\n\r\nclass SignUp extends Component {\r\n\r\n    constructor(props){\r\n        super(props);       \r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n \r\n    renderField(field) {\r\n        const { meta: { touched, error } } = field;\r\n        const className = `form-group ${touched && error ? \"has-danger\" : \"\"}`;       \r\n\r\n        return (\r\n            <div className={className}>\r\n                <input className=\"form-control\" placeholder={field.placeholder} type={field.type} {...field.input} />\r\n                <div className=\"text-help\">\r\n                    {touched ? error : \"\"}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n \r\n   componentDidMount()\r\n   {\r\n     //set the with credentials to true\r\n     //axios.defaults.withCredentials = true;\r\n   }\r\n    onSubmit = (values) => {\r\n    \r\n      // this.props.login(values, () => {\r\n       // this.props.history.push(\"/login\");\r\n      //});\r\n       \r\n       \r\n    }\r\n\r\n    render() {\r\n        \r\n       // const { handleSubmit } = this.props;\r\n\r\n      //  let redirectVar = null;\r\n      //  let notvalidatedalert = null;\r\n       \r\n        //if(this.props.authFlag)\r\n        //{            \r\n        // if (cookie.load('cookie')) {\r\n         //    console.log(\"Redirecting to Home\");\r\n         //    redirectVar = <Redirect to=\"/home\" />\r\n        // }\r\n         //else if (this.props.authFlag === false && (this.props.login_status === \"Invalid Information\"  || this.props.login_status === \"Username does not exist\"))\r\n         //{\r\n          //  notvalidatedalert = <h6>Incorrect username or password entered. Please try again</h6>\r\n       // }\r\n        return (\r\n\r\n            <div>\r\n                 <form onSubmit={console.log('SignUp')}>\r\n                        <h3>SignUp</h3>\r\n                                <Field\r\n                                    placeholder=\"First Name\"\r\n                                    name=\"firstname\"\r\n                                    type = \"text\"\r\n                                    component={this.renderField}\r\n                                />\r\n                               <Field\r\n                                    placeholder=\"Last Name\"\r\n                                    name=\"lastname\"\r\n                                    type=\"text\"\r\n                                    component={this.renderField}\r\n                                />\r\n                                <Field\r\n                                    placeholder=\"Username\"\r\n                                    name=\"username\"\r\n                                    type = \"username\"\r\n                                    component={this.renderField}\r\n                                />\r\n                                <Field\r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    type = \"password\"\r\n                                    component={this.renderField}\r\n                                />\r\n                                <Field\r\n                                    placeholder=\"Confirm Password\"\r\n                                    name=\"confirm\"\r\n                                    type = \"password\"\r\n                                    component={this.renderField}\r\n                                />\r\n                                <Button type=\"submit\" fullWidth color=\"secondary\" variant=\"contained\">SignUp</Button>\r\n                            </form>\r\n\r\n                        </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n   \r\n    return {\r\n        authFlag : state.signupReducer.authFlag,\r\n       // username : state.reducer.username,\r\n      //  login_status : state.reducer.login_status,\r\n       // type : state.reducer.type  \r\n     }\r\n}\r\n\r\nconst mapDispatchStateToProps = dispatch => {\r\n    return {\r\n        signup : (values) => {\r\n                    dispatch({type: \"signup\",payload : values})\r\n            \r\n        }\r\n    }\r\n}\r\nexport default reduxForm({\r\n   // validate,\r\n    form: \"SignupForm\",\r\n    reducer: \"signupReducer\"\r\n})(connect(mapStateToProps,mapDispatchStateToProps)(SignUp)); \r\n"]},"metadata":{},"sourceType":"module"}