{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aysha\\\\Desktop\\\\Aysha\\\\SJSU\\\\Fall 2019\\\\CMPE 295A\\\\project\\\\frontend\\\\src\\\\components\\\\LiveSurveillance\\\\LiveSurveillance.js\";\nimport React, { Component } from \"react\";\nimport '../../App.css';\nimport LeftDrawer from '../Drawer/Drawer';\nimport * as videoStyles from \"../../styles/video\";\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport Timer from './Timer';\nimport { SignalingClient } from 'amazon-kinesis-video-streams-webrtc';\nimport backendURL from '../../backendUrl';\nimport { Redirect } from \"react-router-dom\";\nimport ReactHLS from 'react-hls';\nimport Hls from \"hls.js\";\n\nclass LiveSurveillance extends Component {\n  constructor(props) {\n    super(props);\n    if (this.props.allThreats.length == 0) this.props.threats();\n  }\n\n  componentDidMount() {\n    this.props.surveillance(); // console.log(\"user : \"  + sessionStorage.getItem(\"user\"))\n    // if(sessionStorage.getItem(\"user\") == null)\n    //   this.setState({redirectVar : <Redirect to= \"/signin\"/>})\n  }\n\n  componentWillMount() {}\n\n  render() {\n    var date = new Date().getMonth() + 1 + \"/\" + new Date().getDate() + \"/\" + new Date().getFullYear();\n    var location = \"37.3352° N, 121.8811° W\";\n    var city = \"San Jose\";\n    var camera = \"A103\";\n    var protocol = 'HLS';\n    var streamName = 'threatStream';\n    var playbackMode = 'LIVE';\n    var playerName = 'HLS.js';\n    var options = {\n      accessKeyId: 'AKIAXBXQVKC4TY2ZUR6V',\n      secretAccessKey: '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',\n      sessionToken: undefined,\n      region: 'us-east-1',\n      endpoint: undefined\n    };\n    var kinesisVideo = new AWS.KinesisVideo(options);\n    var kinesisVideoArchivedContent = new AWS.KinesisVideoArchivedMedia(options);\n    kinesisVideo.getDataEndpoint({\n      StreamName: streamName,\n      APIName: \"GET_HLS_STREAMING_SESSION_URL\"\n    }, function (err, response) {\n      if (err) {\n        return console.error(err);\n      }\n\n      console.log('Data endpoint: ' + response.DataEndpoint);\n      kinesisVideoArchivedContent.endpoint = new AWS.Endpoint(response.DataEndpoint); // Step 3: Get a Streaming Session URL\n\n      var consoleInfo = 'Fetching ' + protocol + ' Streaming Session URL';\n      console.log(consoleInfo);\n      kinesisVideoArchivedContent.getHLSStreamingSessionURL({\n        StreamName: streamName,\n        PlaybackMode: playbackMode,\n        HLSFragmentSelector: {\n          FragmentSelectorType: 'SERVER_TIMESTAMP',\n          TimestampRange: playbackMode === \"LIVE\" ? undefined : {\n            StartTimestamp: new Date($('#startTimestamp').val()),\n            EndTimestamp: new Date($('#endTimestamp').val())\n          }\n        },\n        ContainerFormat: $('#containerFormat').val(),\n        DiscontinuityMode: $('#discontinuityMode').val(),\n        DisplayFragmentTimestamp: $('#displayFragmentTimestamp').val(),\n        MaxMediaPlaylistFragmentResults: parseInt($('#maxResults').val()),\n        Expires: parseInt($('#expires').val())\n      }, function (err, response) {\n        if (err) {\n          return console.error(err);\n        }\n\n        console.log('HLS Streaming Session URL: ' + response.HLSStreamingSessionURL); // Step 4: Give the URL to the video player.\n\n        var playerElement = $('#hlsjs');\n        playerElement.show();\n        var player = new Hls();\n        console.log('Created HLS.js Player');\n        player.loadSource(response.HLSStreamingSessionURL);\n        player.attachMedia(playerElement[0]);\n        console.log('Set player source');\n        player.on(Hls.Events.MANIFEST_PARSED, function () {\n          video.play();\n          console.log('Starting playback');\n        });\n      });\n    });\n    return React.createElement(\"div\", {\n      style: videoStyles.background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: videoStyles.videoContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(LeftDrawer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"playerContainer\",\n      style: videoStyles.videoFrame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      id: \"hlsjs\",\n      class: \"player\",\n      controls: true,\n      autoplay: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), \"                \"), React.createElement(\"div\", {\n      style: videoStyles.videoInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" Date: \", date, \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 Location: \", location, \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 City: \", city, \"  \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0  Camera: \", camera))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    link: state.surveillanceReducer.link,\n    allThreats: state.threatsReducer.allThreats\n  };\n};\n\nconst mapDispatchStateToProps = dispatch => {\n  return {\n    surveillance: () => {\n      axios.get(backendURL + '/live-surveillance').then(response => {\n        dispatch({\n          type: \"surveillance\",\n          payload: response.data\n        });\n      });\n    },\n    threats: () => {\n      axios.get(backendURL + '/all-threats').then(response => {\n        console.log(response.data); // const threatIds = response.data;\n        //  axios.post(backendURL + '/threat-details', response.data).then(result=>{\n        //          console.log(result);\n        // })\n\n        dispatch({\n          type: \"threats\",\n          payload: response.data\n        });\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchStateToProps)(LiveSurveillance);","map":{"version":3,"sources":["C:/Users/Aysha/Desktop/Aysha/SJSU/Fall 2019/CMPE 295A/project/frontend/src/components/LiveSurveillance/LiveSurveillance.js"],"names":["React","Component","LeftDrawer","videoStyles","axios","connect","Timer","SignalingClient","backendURL","Redirect","ReactHLS","Hls","LiveSurveillance","constructor","props","allThreats","length","threats","componentDidMount","surveillance","componentWillMount","render","date","Date","getMonth","getDate","getFullYear","location","city","camera","protocol","streamName","playbackMode","playerName","options","accessKeyId","secretAccessKey","sessionToken","undefined","region","endpoint","kinesisVideo","AWS","KinesisVideo","kinesisVideoArchivedContent","KinesisVideoArchivedMedia","getDataEndpoint","StreamName","APIName","err","response","console","error","log","DataEndpoint","Endpoint","consoleInfo","getHLSStreamingSessionURL","PlaybackMode","HLSFragmentSelector","FragmentSelectorType","TimestampRange","StartTimestamp","$","val","EndTimestamp","ContainerFormat","DiscontinuityMode","DisplayFragmentTimestamp","MaxMediaPlaylistFragmentResults","parseInt","Expires","HLSStreamingSessionURL","playerElement","show","player","loadSource","attachMedia","on","Events","MANIFEST_PARSED","video","play","background","videoContainer","videoFrame","videoInfo","mapStateToProps","state","link","surveillanceReducer","threatsReducer","mapDispatchStateToProps","dispatch","get","then","type","payload","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport '../../App.css';\r\nimport LeftDrawer from '../Drawer/Drawer';\r\nimport * as videoStyles from  \"../../styles/video\";\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport Timer from './Timer';\r\nimport { SignalingClient } from 'amazon-kinesis-video-streams-webrtc';\r\nimport backendURL from '../../backendUrl';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ReactHLS from 'react-hls';\r\nimport Hls from \"hls.js\";\r\n\r\n\r\nclass LiveSurveillance extends Component {\r\n\r\n    constructor(props){\r\n        super(props); \r\n        if(this.props.allThreats.length == 0)\r\n             this.props.threats();\r\n        \r\n    }\r\n    componentDidMount(){\r\n        this.props.surveillance();\r\n       \r\n       // console.log(\"user : \"  + sessionStorage.getItem(\"user\"))\r\n       // if(sessionStorage.getItem(\"user\") == null)\r\n         //   this.setState({redirectVar : <Redirect to= \"/signin\"/>})\r\n       \r\n    }\r\n    componentWillMount (){\r\n       \r\n    }\r\n    render() {\r\n        var date = (new Date().getMonth() + 1) + \"/\" + new Date().getDate() + \"/\" + new Date().getFullYear();\r\n        var location = \"37.3352° N, 121.8811° W\";\r\n        var city = \"San Jose\"\r\n        var camera = \"A103\";\r\n       \r\n        var protocol = 'HLS';\r\n        var streamName = 'threatStream';\r\n        var playbackMode = 'LIVE';\r\n        var playerName = 'HLS.js';\r\n\r\n        var options = {\r\n            accessKeyId: 'AKIAXBXQVKC4TY2ZUR6V',\r\n            secretAccessKey: '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',\r\n            sessionToken:  undefined,\r\n            region: 'us-east-1',\r\n            endpoint: undefined\r\n        }\r\n        var kinesisVideo = new AWS.KinesisVideo(options);\r\n        var kinesisVideoArchivedContent = new AWS.KinesisVideoArchivedMedia(options);\r\n        kinesisVideo.getDataEndpoint({\r\n            StreamName: streamName,\r\n            APIName: \"GET_HLS_STREAMING_SESSION_URL\"\r\n        }, function(err, response) {\r\n            if (err) { return console.error(err); }\r\n            console.log('Data endpoint: ' + response.DataEndpoint);\r\n            kinesisVideoArchivedContent.endpoint = new AWS.Endpoint(response.DataEndpoint);\r\n\r\n            // Step 3: Get a Streaming Session URL\r\n            var consoleInfo = 'Fetching ' + protocol + ' Streaming Session URL';\r\n            console.log(consoleInfo);\r\n\r\n                kinesisVideoArchivedContent.getHLSStreamingSessionURL({\r\n                    StreamName: streamName,\r\n                    PlaybackMode: playbackMode,\r\n                    HLSFragmentSelector: {\r\n                        FragmentSelectorType: 'SERVER_TIMESTAMP',\r\n                        TimestampRange: playbackMode === \"LIVE\" ? undefined : {\r\n                            StartTimestamp: new Date($('#startTimestamp').val()),\r\n                            EndTimestamp: new Date($('#endTimestamp').val())\r\n                        }\r\n                    },\r\n                    ContainerFormat: $('#containerFormat').val(),\r\n                    DiscontinuityMode: $('#discontinuityMode').val(),\r\n                    DisplayFragmentTimestamp: $('#displayFragmentTimestamp').val(),\r\n                    MaxMediaPlaylistFragmentResults: parseInt($('#maxResults').val()),\r\n                    Expires: parseInt($('#expires').val())\r\n                }, function(err, response) {\r\n                    if (err) { return console.error(err); }\r\n                    console.log('HLS Streaming Session URL: ' + response.HLSStreamingSessionURL);\r\n\r\n                    // Step 4: Give the URL to the video player.\r\n               \r\n                        var playerElement = $('#hlsjs');\r\n                        playerElement.show();\r\n                        var player = new Hls();\r\n                        console.log('Created HLS.js Player');\r\n                        player.loadSource(response.HLSStreamingSessionURL);\r\n                        player.attachMedia(playerElement[0]);\r\n                        console.log('Set player source');\r\n                        player.on(Hls.Events.MANIFEST_PARSED, function() {\r\n                            video.play();\r\n                            console.log('Starting playback');\r\n                        });\r\n                    \r\n                });\r\n        \r\n        });\r\n\r\n            return (\r\n            <div  style={videoStyles.background} >\r\n                \r\n                <div  style={videoStyles.videoContainer}  >\r\n                <LeftDrawer></LeftDrawer>\r\n                <div  id=\"playerContainer\" style={videoStyles.videoFrame}>\r\n                           <video id=\"hlsjs\" class=\"player\" controls autoplay></video>\r\n\r\n{/*                         <ReactHLS style={videoStyles.videoFrame} url={\"https://b-604520a7.kinesisvideo.us-east-1.amazonaws.com\"} />\r\n */}                </div>\r\n                {/*   <iframe style={videoStyles.video} width=\"700px\" height=\"400px\" src=\"https://295-videos.s3.us-east-2.amazonaws.com/San-Jose-16th-Oct-2019.mp4\"></iframe> */}\r\n                    <div style = {videoStyles.videoInfo}>{/* <Timer></Timer> */}<h5> Date: {date} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Location: {location} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; City: {city}  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Camera: {camera}</h5></div>\r\n                \r\n                </div>\r\n    \r\n            </div> \r\n\r\n            );\r\n    \r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n   \r\n    return {\r\n        link : state.surveillanceReducer.link,\r\n        allThreats : state.threatsReducer.allThreats,\r\n     }\r\n}\r\n\r\nconst mapDispatchStateToProps = dispatch => {\r\n    \r\n    return {\r\n        surveillance : () => {\r\n            axios.get(backendURL + '/live-surveillance').then(response=>{\r\n                dispatch({type: \"surveillance\",payload : response.data})\r\n            })\r\n                    \r\n            \r\n        },\r\n        threats : () => {\r\n            axios.get(backendURL + '/all-threats').then(response=>{\r\n                console.log(response.data);\r\n              // const threatIds = response.data;\r\n              //  axios.post(backendURL + '/threat-details', response.data).then(result=>{\r\n              //          console.log(result);\r\n               // })\r\n                dispatch({type: \"threats\",payload : response.data})\r\n            }) \r\n        },\r\n    }\r\n}\r\n\r\nexport default (connect(mapStateToProps,mapDispatchStateToProps)(LiveSurveillance));  \r\n"]},"metadata":{},"sourceType":"module"}