{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aysha\\\\Desktop\\\\Aysha\\\\SJSU\\\\Fall 2019\\\\CMPE 295A\\\\project\\\\frontend\\\\src\\\\components\\\\ThreatSummary\\\\ThreatSummary.js\";\nimport React, { Component } from \"react\";\nimport '../../App.css';\nimport LeftDrawer from '../Drawer/Drawer';\nimport * as imageStyles from \"../../styles/image\";\nimport * as videoStyles from \"../../styles/video\";\nimport axios from 'axios';\nimport { connect } from \"react-redux\";\nimport * as threats from \"./Threats\";\nimport backendURL from '../../backendUrl';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\nimport * as styles from \"../../styles/settings\";\nimport * as modalStyles from \"../../styles/modal\";\nimport ModalExample from \"./ModalExample\";\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport { Redirect } from \"react-router-dom\";\n\nclass ThreatSummary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classified: 0,\n      msg: \"Send Feedback Now\",\n      redirectVar: null\n    };\n    this.classify = this.classify.bind(this);\n  }\n\n  componentDidMount() {//  this.props.summary();\n  }\n\n  classify() {\n    console.log(\"Classify Clicked\");\n\n    if (this.state.classified == 0) {\n      console.log(\"first click\");\n      this.setState({\n        classified: 1,\n        msg: \"Please click again to confirm this incident as not a threat\"\n      });\n    }\n\n    if (this.state.classified == 1) {\n      console.log(\"classifying\");\n      console.log(this.props.allThreats[this.props.id].link);\n      this.props.classify(this.props.allThreats[this.props.id].link);\n      this.setState({\n        redirectVar: React.createElement(Redirect, {\n          to: \"/search-threats\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        })\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state.redirectVar);\n    var closeModal = React.createElement(\"button\", {\n      className: \"close\",\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Close this modal and check if it works or don't do it but check it if works \");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.redirectVar, React.createElement(\"div\", {\n      style: videoStyles.background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: videoStyles.videoContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(LeftDrawer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: videoStyles.videoFrame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: videoStyles.video,\n      src: '' + this.props.allThreats[this.props.id].link,\n      width: \"100%;\",\n      height: \"500px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: videoStyles.videoInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Camera: \", this.props.allThreats[this.props.id].camera_id, \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 Date: \", this.props.allThreats[this.props.id].date, \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 Location: \", this.props.allThreats[this.props.id].location, \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0  Certainty: \", this.props.allThreats[this.props.id].certainty), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Certain this is not a threat? \", React.createElement(Link, {\n      onClick: this.classify,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.msg)), \" \")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    link: state.threatsReducer.link,\n    id: state.threatsReducer.id,\n    allThreats: state.threatsReducer.allThreats,\n    redirect: state.threatsReducer.redirect\n  };\n};\n\nconst mapDispatchStateToProps = dispatch => {\n  return {\n    summary: () => {\n      axios.get(backendURL + '/threat-summary').then(response => {\n        dispatch({\n          type: \"summary\",\n          payload: response.data\n        });\n      });\n    },\n    classify: link => {\n      axios.post(backendURL + '/classify', link).then(response => {\n        dispatch({\n          type: \"classify-redirect\",\n          payload: response.status\n        });\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchStateToProps)(ThreatSummary);","map":{"version":3,"sources":["C:/Users/Aysha/Desktop/Aysha/SJSU/Fall 2019/CMPE 295A/project/frontend/src/components/ThreatSummary/ThreatSummary.js"],"names":["React","Component","LeftDrawer","imageStyles","videoStyles","axios","connect","threats","backendURL","Modal","ModalHeader","ModalBody","ModalFooter","Link","styles","modalStyles","ModalExample","Button","Popover","PopoverHeader","PopoverBody","Redirect","ThreatSummary","constructor","props","state","classified","msg","redirectVar","classify","bind","componentDidMount","console","log","setState","allThreats","id","link","render","closeModal","toggleModal","background","videoContainer","videoFrame","video","videoInfo","camera_id","date","location","certainty","mapStateToProps","threatsReducer","redirect","mapDispatchStateToProps","dispatch","summary","get","then","response","type","payload","data","post","status"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport '../../App.css';\r\nimport LeftDrawer from '../Drawer/Drawer';\r\nimport * as imageStyles from  \"../../styles/image\";\r\nimport * as videoStyles from  \"../../styles/video\";\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport * as threats from \"./Threats\";\r\nimport backendURL from '../../backendUrl';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as styles from \"../../styles/settings\"; \r\nimport * as modalStyles from \"../../styles/modal\";\r\nimport ModalExample from \"./ModalExample\";\r\nimport {Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport {  Redirect } from \"react-router-dom\";\r\n\r\nclass ThreatSummary extends Component {\r\n\r\n    constructor(props){\r\n        super(props); \r\n        this.state = {\r\n            classified: 0,\r\n            msg : \"Send Feedback Now\",\r\n            redirectVar : null\r\n        }\r\n        this.classify = this.classify.bind(this);\r\n\r\n    }\r\n    componentDidMount(){\r\n      //  this.props.summary();\r\n    }\r\n    classify(){\r\n        console.log(\"Classify Clicked\");\r\n        if(this.state.classified == 0)\r\n            {\r\n                console.log(\"first click\");\r\n                this.setState({\r\n                    classified : 1,\r\n                    msg : \"Please click again to confirm this incident as not a threat\"\r\n                })\r\n                \r\n            }\r\n        if(this.state.classified == 1)\r\n        {\r\n            console.log(\"classifying\")\r\n            console.log(this.props.allThreats[this.props.id].link);\r\n            this.props.classify(this.props.allThreats[this.props.id].link);\r\n            this.setState({\r\n                redirectVar :  <Redirect to=\"/search-threats\"/>\r\n            })\r\n        }\r\n    }\r\n    render () {\r\n        console.log(this.state.redirectVar);\r\n        var closeModal =  <button className=\"close\" onClick={this.toggleModal}>Close this modal and check if it works or don't do it but check it if works </button>;\r\n        return (\r\n            <div>\r\n                {this.state.redirectVar}\r\n                \r\n        <div  style={videoStyles.background} >\r\n         \r\n           \r\n            <div  style={videoStyles.videoContainer}  >\r\n            <LeftDrawer></LeftDrawer>\r\n            <div style={videoStyles.videoFrame}>\r\n        \r\n                <img style={videoStyles.video} src={''+this.props.allThreats[this.props.id].link} width='100%;' height='500px'></img>\r\n            </div>\r\n              {/*   <iframe style={videoStyles.video} width=\"700px\" height=\"400px\" src=\"https://295-videos.s3.us-east-2.amazonaws.com/San-Jose-16th-Oct-2019.mp4\"></iframe> */}\r\n                <div style = {videoStyles.videoInfo}><h5> Camera: {this.props.allThreats[this.props.id].camera_id} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Date: {this.props.allThreats[this.props.id].date} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Location: {this.props.allThreats[this.props.id].location} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  Certainty: {this.props.allThreats[this.props.id].certainty}</h5>\r\n                <div><h5>Certain this is not a threat? <Link onClick = {this.classify}>{this.state.msg}</Link></h5> </div>\r\n                \r\n                </div>\r\n              \r\n            </div>\r\n               </div> \r\n        \r\n</div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n   \r\n    return {\r\n        link : state.threatsReducer.link,\r\n        id : state.threatsReducer.id,\r\n        allThreats : state.threatsReducer.allThreats,\r\n        redirect : state.threatsReducer.redirect\r\n     }\r\n}\r\n\r\nconst mapDispatchStateToProps = dispatch => {\r\n    return {\r\n        summary : () => {\r\n            axios.get(backendURL + '/threat-summary').then(response=>{\r\n                dispatch({type: \"summary\",payload : response.data})\r\n            })          \r\n        },\r\n        classify : (link) =>{\r\n            axios.post(backendURL +  '/classify' , link).then(response =>{\r\n                dispatch({type: \"classify-redirect\",payload : response.status})\r\n\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default (connect(mapStateToProps,mapDispatchStateToProps)(ThreatSummary));  \r\n"]},"metadata":{},"sourceType":"module"}